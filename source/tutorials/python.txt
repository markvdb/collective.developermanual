=======================
 Python, Plone and Zope
=======================

.. admonition:: Description

    The basics of Python programming, and performing Python interpreter installations.

.. contents :: :local:

.. highlight:: console

Introduction
=============

`Python <http://python.org>`_ is the programming language used by 
`Plone <http://plone.org>`_ and `Zope <http://zope.org>`_.

Tutorial and language learning
===============================

* Official Python tutorial: http://docs.python.org/tutorial/

* Google Python classes:
  http://code.google.com/edu/languages/google-python-class/

Plone and Zope resources
==========================

Plone resources
----------------

* `Plone Cheat Sheet <http://www.coactivate.org/projects/plonecheatsheet>`_. A
  single list of every technology you need to learn to develop with plone, why
  you need it and how to learn it. A bit out of date, but a good overview
  nonetheless.

* `Plone Trac <http://dev.plone.org/plone>`_ contains bug reports, Plone source
  code and commits. Useful when you encounter a new exception or you are
  looking for a reference how to use the API.

* `Plone source code in version control system <http://svn.plone.org/svn/plone>`_.

Zope resources
----------------

* `Zope 3 API reference <http://apidoc.zope.org/>`_. Good source for up-to-date
  Zope Python API and ZCML references.

* `Zope 2 book <http://docs.zope.org/zope2/zope2book/>`_. This describes old
  Zope 2 technologies. The book is mostly good for explaining some old things,
  but '''do not''' use it as a reference for building new things.

  The chapters on Zope Page Templates however are still the best reference.

.. TODO: hyperlink 

* `Zope source code in version control system <http://svn.zope.org/>`_.

* `Zope package guide <http://wiki.zope.org/zope3/Zope3PackageGuide>`_.

Installing Python
=================

It is not recommended to use the system-wide Python installation with Plone
directly. Plone may require newer or older package versions, which could conflict 
with ones installed by your operating system. Installing packages to the 
system-wide Python installation always requires root privileges, and you could 
easily hose your box when doing Python development work. There are three basic 
ways to install Python for use with Plone:

Unified installer included python
---------------------------------

No need to worry here. The Plone Unified Installer compiles its own preconfigured 
Python interpreter.


System python with virtualenv
-----------------------------

`Virtualenv <http://virtualenv.org>` is a tool to create isolated python 
environments. It can help avoid the typical problems using a system-wide Python 
install with Plone. Be very careful about system-wide Python installation 
upgrades though when going this route!

::
    $ which python2.6 virtualenv
    /usr/bin/python2.6
    /usr/bin/virtualenv
    $ /usr/bin/python2.6 /usr/bin/virtualenv --no-site-packages ~/virtpy26
    New python executable in /home/developer/virtpy26/bin/python2.6
    Also creating executable in /home/developer/virtpy26/bin/python
    Please make sure you remove any previous custom paths from your 
    /home/developer/.pydistutils.cfg file.
    Installing setuptools............done.
    $ cd ~/virtpy26
    $ . bin/activate
    (virtpy26)$ which python
    /home/developer/virtpy26/bin/python    

Compiling python from source (directly or with virtualenv)
----------------------------------------------------------

If you are a developer, you might wish to use a custom-built Python
interpreter, which gives you more control over the configuration.

Virtualenv can create isolated python environments on top of your 
custom-built python environment too.

.. note::

	TODO: Finish - point to mFabrik log with collective.python.buildout info
